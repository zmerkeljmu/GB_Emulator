#pragma once
#include "bit_flag.h"
#include "bit_shift.h"
#include "8bit_arithmetic.h"
#include "8bit_load.h"
#include "16bit_arithmetic.h"
#include "16bit_load.h"
#include "bits.h"
#include "jump_subroutine.h"
#include "misc_inst.h"
#include "stack.h"

class Cpu;


typedef u8(*opcode_func)(Cpu*);

struct instruction {
	u8 bytes;
	const char* name;
	opcode_func function;
};

class Instruction_list {

public:
	Instruction_list() {
		base[0x00] = {1, "NOP", &nop_00};
		base[0x01] = {3, "LD BC, d16", &ldbcu16_01};
		base[0x02] = {1, "LD (BC), A", &ldbca_02};
		base[0x03] = { 1, "INC BC", &incbc_03 };
		base[0x04] = { 1, "INC B", &incb_04 };
		base[0x05] = { 1, "DEC B", &decb_05 };
		base[0x06] = { 2, "LD B, d8", &ldbu8_06 };
		base[0x07] = { 1, "RLCA", &rlca_07 };
		base[0x08] = { 1, "LD (a16), SP", &ldu16sp_08 };
		base[0x09] = { 1, "ADD HL, BC", &addbc_09 };
		base[0x0A] = { 1, "LD A, (BC)", &ldabc_0A };
		base[0x0B] = { 1, "DEC BC", &decbc_0B };
		base[0x0C] = { 1, "INC C", &incc_0C };
		base[0x0D] = { 1, "DEC C", &decc_0D };
		base[0x0E] = { 2, "LD C, d8", &ldcu8_0E };
		base[0x0F] = { 1, "RRCA", &rrca_0F };
		base[0x10] = { 2, "STOP 0", &stop_10 };
		base[0x11] = { 3, "LD DE, d16", &lddeu16_11 };
		base[0x12] = { 1, "LD (DE), A", &lddea_12 };
		base[0x13] = { 1, "INC DE", &incde_13 };
		base[0x14] = { 1, "INC D", &incd_14 };
		base[0x15] = { 1, "DEC D", &decd_15 };
		base[0x16] = { 2, "LD D, d8", &lddu8_16 };
		base[0x17] = { 1, "RLA", &rla_17 };
		base[0x18] = { 2, "JR r8", &jri8_18 };
		base[0x19] = { 1, "ADD HL, DE", &addde_19 };
		base[0x1A] = { 1, "LD A, (DE)", &ldade_1A };
		base[0x1B] = { 1, "DEC DE", &decde_1B };
		base[0x1C] = { 1, "INC E", &ince_1C };
		base[0x1D] = { 1, "DEC E", &dece_1D };
		base[0x1E] = { 2, "LD E, d8", &ldeu8_1E };
		base[0x1F] = { 1, "RRA", &rra_1F };
		base[0x20] = { 2, "JR NZ, r8", &jrnzi8_20 };
		base[0x21] = { 3, "LD HL, d16", &ldhlu16_21 };
		base[0x22] = { 1, "LD (HL+), A", &ldhlinca_22 };
		base[0x23] = { 1, "INC HL", &inchl_23 };
		base[0x24] = { 1, "INC H", &inch_24 };
		base[0x25] = { 1, "DEC H", &dech_25 };
		base[0x26] = { 2, "LD H, d8", &ldhu8_26 };
		base[0x27] = { 1, "DAA", &daa_27 };
		base[0x28] = { 2, "JR Z, r8", &jrzi8_28 };
		base[0x29] = { 1, "ADD HL, HL", &addhl_29 };
		base[0x2A] = { 1, "LD A, (HL+)", &ldahlinc_2A };
		base[0x2B] = { 1, "DEC HL", &dechl_2B };
		base[0x2C] = { 1, "INC L", &incl_2C };
		base[0x2D] = { 1, "DEC L", &decl_2D };
		base[0x2E] = { 2, "LD L, d8", &ldlu8_2E };
		base[0x2F] = { 1, "CPL", &cpl_2F };
		base[0x30] = { 2, "JR NC, r8", &jrnci8_30 };
		base[0x31] = { 3, "LD SP, d16", &ldspu16_31 };
		base[0x32] = { 1, "LD (HL-), A", &ldhldeca_32 };
		base[0x33] = { 1, "INC SP", &incsp_33 };
		base[0x34] = { 1, "INC (HL)", &inchl_34 };
		base[0x35] = { 1, "DEC (HL)", &dechl_35 };
		base[0x36] = { 2, "LD (HL), d8", &ldhlu8_36 };
		base[0x37] = { 1, "SCF", &scf_37 };
		base[0x38] = { 2, "JR C, r8", &jrci8_38 };
		base[0x39] = { 1, "ADD HL, SP", &addsp_39 };
		base[0x3A] = { 1, "LD A, (HL-)", &ldahldec_3A };
		base[0x3B] = { 1, "DEC SP", &decsp_3B };
		base[0x3C] = { 1, "INC A", &inca_3C };
		base[0x3D] = { 1, "DEC A", &deca_3D };
		base[0x3E] = { 2, "LD A, d8", &ldau8_3E };
		base[0x3F] = { 1, "CCF", &ccf_3F };
		base[0x40] = { 1, "LD B, B", &ldbb_40 };
		base[0x41] = { 1, "LD B, C", &ldbc_41 };
		base[0x42] = { 1, "LD B, D", &ldbd_42 };
		base[0x43] = { 1, "LD B, E", &ldbe_43 };
		base[0x44] = { 1, "LD B, H", &ldbh_44 };
		base[0x45] = { 1, "LD B, L", &ldbl_45 };
		base[0x46] = { 1, "LD B, (HL)", &ldbhl_46 };
		base[0x47] = { 1, "LD B, A", &ldba_47 };
		base[0x48] = { 1, "LD C, B", &ldcb_48 };
		base[0x49] = { 1, "LD C, C", &ldcc_49 };
		base[0x4A] = { 1, "LD C, D", &ldcd_4A };
		base[0x4B] = { 1, "LD C, E", &ldce_4B };
		base[0x4C] = { 1, "LD C, H", &ldch_4C };
		base[0x4D] = { 1, "LD C, L", &ldcl_4D };
		base[0x4E] = { 1, "LD C, (HL)", &ldchl_4E };
		base[0x4F] = { 1, "LD C, A", &ldca_4F };
		base[0x50] = { 1, "LD D, B", &lddb_50 };
		base[0x51] = { 1, "LD D, C", &lddc_51 };
		base[0x52] = { 1, "LD D, D", &lddd_52 };
		base[0x53] = { 1, "LD D, E", &ldde_53 };
		base[0x54] = { 1, "LD D, H", &lddh_54 };
		base[0x55] = { 1, "LD D, L", &lddl_55 };
		base[0x56] = { 1, "LD D, (HL)", &lddhl_56 };
		base[0x57] = { 1, "LD D, A", &ldda_57 };
		base[0x58] = { 1, "LD E, B", &ldeb_58 };
		base[0x59] = { 1, "LD E, C", &ldec_59 };
		base[0x5A] = { 1, "LD E, D", &lded_5A };
		base[0x5B] = { 1, "LD E, E", &ldee_5B };
		base[0x5C] = { 1, "LD E, H", &ldeh_5C };
		base[0x5D] = { 1, "LD E, L", &ldel_5D };
		base[0x5E] = { 1, "LD E, (HL)", &ldehl_5E };
		base[0x5F] = { 1, "LD E, A", &ldea_5F };
		base[0x60] = { 1, "LD H, B", &ldhb_60 };
		base[0x61] = { 1, "LD H, C", &ldhc_61 };
		base[0x62] = { 1, "LD H, D", &ldhd_62 };
		base[0x63] = { 1, "LD H, E", &ldhe_63 };
		base[0x64] = { 1, "LD H, H", &ldhh_64 };
		base[0x65] = { 1, "LD H, L", &ldhl_65 };
		base[0x66] = { 1, "LD H, (HL)", &ldhhl_66 };
		base[0x67] = { 1, "LD H, A", &ldha_67 };
		base[0x68] = { 1, "LD L, B", &ldlb_68 };
		base[0x69] = { 1, "LD L, C", &ldlc_69 };
		base[0x6A] = { 1, "LD L, D", &ldld_6A };
		base[0x6B] = { 1, "LD L, E", &ldle_6B };
		base[0x6C] = { 1, "LD L, H", &ldlh_6C };
		base[0x6D] = { 1, "LD L, L", &ldll_6D };
		base[0x6E] = { 1, "LD L, (HL)", &ldlhl_6E };
		base[0x6F] = { 1, "LD L, A", &ldla_6F };
		base[0x70] = { 1, "LD (HL), B", &ldhlb_70 };
		base[0x71] = { 1, "LD (HL), C", &ldhlc_71 };
		base[0x72] = { 1, "LD (HL), D", &ldhld_72 };
		base[0x73] = { 1, "LD (HL), E", &ldhle_73 };
		base[0x74] = { 1, "LD (HL), H", &ldhlh_74 };
		base[0x75] = { 1, "LD (HL), L", &ldhll_75 };
		base[0x76] = { 1, "HALT", &halt_76 };
		base[0x77] = { 1, "LD (HL), A", &ldhla_77 };
		base[0x78] = { 1, "LD A, B", &ldab_78 };
		base[0x79] = { 1, "LD A, C", &ldac_79 };
		base[0x7A] = { 1, "LD A, D", &ldad_7A };
		base[0x7B] = { 1, "LD A, E", &ldae_7B };
		base[0x7C] = { 1, "LD A, H", &ldah_7C };
		base[0x7D] = { 1, "LD A, L", &ldal_7D };
		base[0x7E] = { 1, "LD A, (HL)", &ldahl_7E };
		base[0x7F] = { 1, "LD A, A", &ldaa_7F };
		base[0x80] = { 1, "ADD A, B", &addb_80 };
		base[0x81] = { 1, "ADD A, C", &addc_81 };
		base[0x82] = { 1, "ADD A, D", &addd_82 };
		base[0x83] = { 1, "ADD A, E", &adde_83 };
		base[0x84] = { 1, "ADD A, H", &addh_84 };
		base[0x85] = { 1, "ADD A, L", &addl_85 };
		base[0x86] = { 1, "ADD A, (HL)", &addhl_86 };
		base[0x87] = { 1, "ADD A, A", &adda_87 };
		base[0x88] = { 1, "ADC A, B", &adcb_88 };
		base[0x89] = { 1, "ADC A, C", &adcc_89 };
		base[0x8A] = { 1, "ADC A, D", &adcd_8A };
		base[0x8B] = { 1, "ADC A, E", &adce_8B };
		base[0x8C] = { 1, "ADC A, H", &adch_8C };
		base[0x8D] = { 1, "ADC A, L", &adcl_8D };
		base[0x8E] = { 1, "ADC A, (HL)", &adchl_8E };
		base[0x8F] = { 1, "ADC A, A", &adca_8F };
		base[0x90] = { 1, "SUB B", &subb_90 };
		base[0x91] = { 1, "SUB C", &subc_91 };
		base[0x92] = { 1, "SUB D", &subd_92 };
		base[0x93] = { 1, "SUB E", &sube_93 };
		base[0x94] = { 1, "SUB H", &subh_94 };
		base[0x95] = { 1, "SUB L", &subl_95 };
		base[0x96] = { 1, "SUB (HL)", &subhl_96 };
		base[0x97] = { 1, "SUB A", &suba_97 };
		base[0x98] = { 1, "SBC A, B", &sbcb_98 };
		base[0x99] = { 1, "SBC A, C", &sbcc_99 };
		base[0x9A] = { 1, "SBC A, D", &sbcd_9A };
		base[0x9B] = { 1, "SBC A, E", &sbce_9B };
		base[0x9C] = { 1, "SBC A, H", &sbch_9C };
		base[0x9D] = { 1, "SBC A, L", &sbcl_9D };
		base[0x9E] = { 1, "SBC A, (HL)", &sbchl_9E };
		base[0x9F] = { 1, "SBC A, A", &sbca_9F };
		base[0xA0] = { 1, "AND B", &andb_A0 };
		base[0xA1] = { 1, "AND C", &andc_A1 };
		base[0xA2] = { 1, "AND D", &andd_A2 };
		base[0xA3] = { 1, "AND E", &ande_A3 };
		base[0xA4] = { 1, "AND H", &andh_A4 };
		base[0xA5] = { 1, "AND L", &andl_A5 };
		base[0xA6] = { 1, "AND (HL)", &andhl_A6 };
		base[0xA7] = { 1, "AND A", &anda_A7 };
		base[0xA8] = { 1, "XOR B", &xorb_A8 };
		base[0xA9] = { 1, "XOR C", &xorc_A9 };
		base[0xAA] = { 1, "XOR D", &xord_AA };
		base[0xAB] = { 1, "XOR E", &xore_AB };
		base[0xAC] = { 1, "XOR H", &xorh_AC };
		base[0xAD] = { 1, "XOR L", &xorl_AD };
		base[0xAE] = { 1, "XOR (HL)", &xorhl_AE };
		base[0xAF] = { 1, "XOR A", &xora_AF };
		base[0xB0] = { 1, "OR B", &orb_B0 };
		base[0xB1] = { 1, "OR C", &orc_B1 };
		base[0xB2] = { 1, "OR D", &ord_B2 };
		base[0xB3] = { 1, "OR E", &ore_B3 };
		base[0xB4] = { 1, "OR H", &orh_B4 };
		base[0xB5] = { 1, "OR L", &orl_B5 };
		base[0xB6] = { 1, "OR (HL)", &orhl_B6 };
		base[0xB7] = { 1, "OR A", &ora_B7 };
		base[0xB8] = { 1, "CP B", &cpb_B8 };
		base[0xB9] = { 1, "CP C", &cpc_B9 };
		base[0xBA] = { 1, "CP D", &cpd_BA };
		base[0xBB] = { 1, "CP E", &cpe_BB };
		base[0xBC] = { 1, "CP H", &cph_BC };
		base[0xBD] = { 1, "CP L", &cpl_BD };
		base[0xBE] = { 1, "CP (HL)", &cphl_BE };
		base[0xBF] = { 1, "CP A", &cpa_BF };
		base[0xC0] = { 1, "RET NZ", &retnz_C0 };
		base[0xC1] = { 1, "POP BC", &popbc_C1 };
		base[0xC2] = { 3, "JP NZ, a16", &jpnzu16_C2 };
		base[0xC3] = { 3, "JP a16", &jpu16_C3 };
		base[0xC4] = { 3, "CALL NZ, a16", &callnzu16_C4 };
		base[0xC5] = { 1, "PUSH BC", &pushbc_C5 };
		base[0xC6] = { 2, "ADD A, d8", &addi8_C6 };
		base[0xC7] = { 1, "RST 00H", &rst00h_C7 };
		base[0xC8] = { 1, "RET Z", &retz_C8 };
		base[0xC9] = { 1, "RET", &ret_C9 };
		base[0xCA] = { 3, "JP Z, a16", &jpzu16_CA };
		base[0xCB] = { 1, "PREFIX CB", &cb_CB };
		base[0xCC] = { 3, "CALL Z, a16", &callzu16_CC };
		base[0xCD] = { 3, "CALL a16", &callu16_CD };
		base[0xCE] = { 2, "ADC A, d8", &adci8_CE };
		base[0xCF] = { 1, "RST 08H", &rst08h_CF };
		base[0xD0] = { 1, "RET NC", &retnc_D0 };
		base[0xD1] = { 1, "POP DE", &popde_D1 };
		base[0xD2] = { 3, "JP NC, a16", &jpncu16_D2 };
		base[0xD4] = { 3, "CALL NC, a16", &callncu16_D4 };
		base[0xD5] = { 1, "PUSH DE", &pushde_D5 };
		base[0xD6] = { 2, "SUB d8", &subi8_D6 };
		base[0xD7] = { 1, "RST 10H", &rst10h_D7 };
		base[0xD8] = { 1, "RET C", &retc_D8 };
		base[0xD9] = { 1, "RETI", &reti_D9 };
		base[0xDA] = { 3, "JP C, a16", &jpcu16_DA };
		base[0xDC] = { 3, "CALL C, a16", &callcu16_DC };
		base[0xDE] = { 2, "SBC A, d8", &sbci8_DE };
		base[0xDF] = { 1, "RST 18H", &rst18h_DF };
		base[0xE0] = { 2, "LDH (a8), A", &ldFFu8a_E0 };
		base[0xE1] = { 1, "POP HL", &pophl_E1 };
		base[0xE2] = { 1, "LD (C), A", &ldFFca_E2 };
		base[0xE5] = { 1, "PUSH HL", &pushhl_E5 };
		base[0xE6] = { 2, "AND d8", &andi8_E6 };
		base[0xE7] = { 1, "RST 20H", &rst20h_E7 };
		base[0xE8] = { 2, "ADD SP, r8", &addspi8_E8};
		base[0xE9] = { 1, "JP (HL)", &jphl_E9 };
		base[0xEA] = { 3, "LD (a16), A", &ldu16a_EA };
		base[0xEE] = { 2, "XOR d8", &xori8_EE };
		base[0xEF] = { 1, "RST 28H", &rst28h_EF };
		base[0xF0] = { 2, "LD A, FF00 + u8", &ldaFFu8_F0 };
		base[0xF1] = { 1, "POP AF", &popaf_F1 };
		base[0xF2] = { 1, "LD A, (C)", &ldaFFc_F2 };
		base[0xF3] = { 1, "DI", &di_F4 };
		base[0xF5] = { 1, "PUSH AF", &pushaf_F5 };
		base[0xF6] = { 2, "OR d8", &ori8_F6 };
		base[0xF7] = { 1, "RST 30H", &rst30h_F7 };
		base[0xF8] = { 2, "LD HL, SP + r8", &ldhlspi8_F8 };
		base[0xF9] = { 1, "LD SP, HL", &ldsphl_F9 };
		base[0xFA] = { 3, "LD A, (a16)", &ldau16_FA };
		base[0xFB] = { 1, "EI", &ei_FB };
		base[0xFE] = { 2, "CP d8", &cpi8_FE };
		base[0xFF] = { 1, "RST 38H", &rst38h_FF };

		//CB instructions
		cb[0x00] = { 1, "RLC B", &rlcb_00 };
		cb[0x01] = { 1, "RLC C", &rlcc_01 };
		cb[0x02] = { 1, "RLC D", &rlcd_02 };
		cb[0x03] = { 1, "RLC E", &rlce_03 };
		cb[0x04] = { 1, "RLC H", &rlch_04 };
		cb[0x05] = { 1, "RLC L", &rlcl_05 };
		cb[0x06] = { 1, "RLC (HL)", &rlchl_06 };
		cb[0x07] = { 1, "RLC A", &cbrlca_07 };
		cb[0x08] = { 1, "RRC B", &rrcb_08 };
		cb[0x09] = { 1, "RRC C", &rrcc_09 };
		cb[0x0A] = { 1, "RRC D", &rrcd_0A };
		cb[0x0B] = { 1, "RRC E", &rrce_0B };
		cb[0x0C] = { 1, "RRC H", &rrch_0C };
		cb[0x0D] = { 1, "RRC L", &rrcl_0D };
		cb[0x0E] = { 1, "RRC (HL)", &rrchl_0E };
		cb[0x0F] = { 1, "RRC A", &cbrrca_0F };
		cb[0x10] = { 1, "RL B", &rlb_10 };
		cb[0x11] = { 1, "RL C", &rlc_11 };
		cb[0x12] = { 1, "RL D", &rld_12 };
		cb[0x13] = { 1, "RL E", &rle_13 };
		cb[0x14] = { 1, "RL H", &rlh_14 };
		cb[0x15] = { 1, "RL L", &rll_15 };
		cb[0x16] = { 1, "RL (HL)", &rlhl_16 };
		cb[0x17] = { 1, "RL A", &cbrla_17 };
		cb[0x18] = { 1, "RR B", &rrb_18 };
		cb[0x19] = { 1, "RR C", &rrc_19 };
		cb[0x1A] = { 1, "RR D", &rrd_1A };
		cb[0x1B] = { 1, "RR E", &rre_1B };
		cb[0x1C] = { 1, "RR H", &rrh_1C };
		cb[0x1D] = { 1, "RR L", &rrl_1D };
		cb[0x1E] = { 1, "RR (HL)", &rrhl_1E };
		cb[0x1F] = { 1, "RR A", &cbrra_1F };
		cb[0x20] = { 1, "SLA B", &slab_20 };
		cb[0x21] = { 1, "SLA C", &slac_21 };
		cb[0x22] = { 1, "SLA D", &slad_22 };
		cb[0x23] = { 1, "SLA E", &slae_23 };
		cb[0x24] = { 1, "SLA H", &slah_24 };
		cb[0x25] = { 1, "SLA L", &slal_25 };
		cb[0x26] = { 1, "SLA (HL)", &slahl_26 };
		cb[0x27] = { 1, "SLA A", &slaa_27 };
		cb[0x28] = { 1, "SRA B", &srab_28 };
		cb[0x29] = { 1, "SRA C", &srac_29 };
		cb[0x2A] = { 1, "SRA D", &srad_2A };
		cb[0x2B] = { 1, "SRA E", &srae_2B };
		cb[0x2C] = { 1, "SRA H", &srah_2C };
		cb[0x2D] = { 1, "SRA L", &sral_2D };
		cb[0x2E] = { 1, "SRA (HL)", &srahl_2E };
		cb[0x2F] = { 1, "SRA A", &sraa_2F };
		cb[0x30] = { 1, "SWAP B", &swapb_30 };
		cb[0x31] = { 1, "SWAP C", &swapc_31 };
		cb[0x32] = { 1, "SWAP D", &swapd_32 };
		cb[0x33] = { 1, "SWAP E", &swape_33 };
		cb[0x34] = { 1, "SWAP H", &swaph_34 };
		cb[0x35] = { 1, "SWAP L", &swapl_35 };
		cb[0x36] = { 1, "SWAP (HL)", &swaphl_36 };
		cb[0x37] = { 1, "SWAP A", &swapa_37 };
		cb[0x38] = { 1, "SRL B", &srlb_38 };
		cb[0x39] = { 1, "SRL C", &srlc_39 };
		cb[0x3A] = { 1, "SRL D", &srld_3A };
		cb[0x3B] = { 1, "SRL E", &srle_3B };
		cb[0x3C] = { 1, "SRL H", &srlh_3C };
		cb[0x3D] = { 1, "SRL L", &srll_3D };
		cb[0x3E] = { 1, "SRL (HL)", &srlhl_3E };
		cb[0x3F] = { 1, "SRL A", &srla_3F };
		cb[0x40] = { 1, "BIT 0, B", &bit0b_40 };
		cb[0x41] = { 1, "BIT 0, C", &bit0c_41 };
		cb[0x42] = { 1, "BIT 0, D", &bit0d_42 };
		cb[0x43] = { 1, "BIT 0, E", &bit0e_43 };
		cb[0x44] = { 1, "BIT 0, H", &bit0h_44 };
		cb[0x45] = { 1, "BIT 0, L", &bit0l_45 };
		cb[0x46] = { 1, "BIT 0, (HL)", &bit0hl_46 };
		cb[0x47] = { 1, "BIT 0, A", &bit0a_47 };
		cb[0x48] = { 1, "BIT 1, B", &bit1b_48 };
		cb[0x49] = { 1, "BIT 1, C", &bit1c_49 };
		cb[0x4A] = { 1, "BIT 1, D", &bit1d_4A };
		cb[0x4B] = { 1, "BIT 1, E", &bit1e_4B };
		cb[0x4C] = { 1, "BIT 1, H", &bit1h_4C };
		cb[0x4D] = { 1, "BIT 1, L", &bit1l_4D };
		cb[0x4E] = { 1, "BIT 1, (HL)", &bit1hl_4E };
		cb[0x4F] = { 1, "BIT 1, A", &bit1a_4F };
		cb[0x50] = { 1, "BIT 2, B", &bit2b_50 };
		cb[0x51] = { 1, "BIT 2, C", &bit2c_51 };
		cb[0x52] = { 1, "BIT 2, D", &bit2d_52 };
		cb[0x53] = { 1, "BIT 2, E", &bit2e_53 };
		cb[0x54] = { 1, "BIT 2, H", &bit2h_54 };
		cb[0x55] = { 1, "BIT 2, L", &bit2l_55 };
		cb[0x56] = { 1, "BIT 2, (HL)", &bit2hl_56 };
		cb[0x57] = { 1, "BIT 2, A", &bit2a_57 };
		cb[0x58] = { 1, "BIT 3, B", &bit3b_58 };
		cb[0x59] = { 1, "BIT 3, C", &bit3c_59 };
		cb[0x5A] = { 1, "BIT 3, D", &bit3d_5A };
		cb[0x5B] = { 1, "BIT 3, E", &bit3e_5B };
		cb[0x5C] = { 1, "BIT 3, H", &bit3h_5C };
		cb[0x5D] = { 1, "BIT 3, L", &bit3l_5D };
		cb[0x5E] = { 1, "BIT 3, (HL)", &bit3hl_5E };
		cb[0x5F] = { 1, "BIT 3, A", &bit3a_5F };
		cb[0x60] = { 1, "BIT 4, B", &bit4b_60 };
		cb[0x61] = { 1, "BIT 4, C", &bit4c_61 };
		cb[0x62] = { 1, "BIT 4, D", &bit4d_62 };
		cb[0x63] = { 1, "BIT 4, E", &bit4e_63 };
		cb[0x64] = { 1, "BIT 4, H", &bit4h_64 };
		cb[0x65] = { 1, "BIT 4, L", &bit4l_65 };
		cb[0x66] = { 1, "BIT 4, (HL)", &bit4hl_66 };
		cb[0x67] = { 1, "BIT 4, A", &bit4a_67 };
		cb[0x68] = { 1, "BIT 5, B", &bit5b_68 };
		cb[0x69] = { 1, "BIT 5, C", &bit5c_69 };
		cb[0x6A] = { 1, "BIT 5, D", &bit5d_6A };
		cb[0x6B] = { 1, "BIT 5, E", &bit5e_6B };
		cb[0x6C] = { 1, "BIT 5, H", &bit5h_6C };
		cb[0x6D] = { 1, "BIT 5, L", &bit5l_6D };
		cb[0x6E] = { 1, "BIT 5, (HL)", &bit5hl_6E };
		cb[0x6F] = { 1, "BIT 5, A", &bit5a_6F };
		cb[0x70] = { 1, "BIT 6, B", &bit6b_70 };
		cb[0x71] = { 1, "BIT 6, C", &bit6c_71 };
		cb[0x72] = { 1, "BIT 6, D", &bit6d_72 };
		cb[0x73] = { 1, "BIT 6, E", &bit6e_73 };
		cb[0x74] = { 1, "BIT 6, H", &bit6h_74 };
		cb[0x75] = { 1, "BIT 6, L", &bit6l_75 };
		cb[0x76] = { 1, "BIT 6, (HL)", &bit6hl_76 };
		cb[0x77] = { 1, "BIT 6, A", &bit6a_77 };
		cb[0x78] = { 1, "BIT 7, B", &bit7b_78 };
		cb[0x79] = { 1, "BIT 7, C", &bit7c_79 };
		cb[0x7A] = { 1, "BIT 7, D", &bit7d_7A };
		cb[0x7B] = { 1, "BIT 7, E", &bit7e_7B };
		cb[0x7C] = { 1, "BIT 7, H", &bit7h_7C };
		cb[0x7D] = { 1, "BIT 7, L", &bit7l_7D };
		cb[0x7E] = { 1, "BIT 7, (HL)", &bit7hl_7E };
		cb[0x7F] = { 1, "BIT 7, A", &bit7a_7F };
		cb[0x80] = { 1, "RES 0, B", &res0b_80 };
		cb[0x81] = { 1, "RES 0, C", &res0c_81 };
		cb[0x82] = { 1, "RES 0, D", &res0d_82 };
		cb[0x83] = { 1, "RES 0, E", &res0e_83 };
		cb[0x84] = { 1, "RES 0, H", &res0h_84 };
		cb[0x85] = { 1, "RES 0, L", &res0l_85 };
		cb[0x86] = { 1, "RES 0, (HL)", &res0hl_86 };
		cb[0x87] = { 1, "RES 0, A", &res0a_87 };
		cb[0x88] = { 1, "RES 1, B", &res1b_88 };
		cb[0x89] = { 1, "RES 1, C", &res1c_89 };
		cb[0x8A] = { 1, "RES 1, D", &res1d_8A };
		cb[0x8B] = { 1, "RES 1, E", &res1e_8B };
		cb[0x8C] = { 1, "RES 1, H", &res1h_8C };
		cb[0x8D] = { 1, "RES 1, L", &res1l_8D };
		cb[0x8E] = { 1, "RES 1, (HL)", &res1hl_8E };
		cb[0x8F] = { 1, "RES 1, A", &res1a_8F };
		cb[0x90] = { 1, "RES 2, B", &res2b_90 };
		cb[0x91] = { 1, "RES 2, C", &res2c_91 };
		cb[0x92] = { 1, "RES 2, D", &res2d_92 };
		cb[0x93] = { 1, "RES 2, E", &res2e_93 };
		cb[0x94] = { 1, "RES 2, H", &res2h_94 };
		cb[0x95] = { 1, "RES 2, L", &res2l_95 };
		cb[0x96] = { 1, "RES 2, (HL)", &res2hl_96 };
		cb[0x97] = { 1, "RES 2, A", &res2a_97 };
		cb[0x98] = { 1, "RES 3, B", &res3b_98 };
		cb[0x99] = { 1, "RES 3, C", &res3c_99 };
		cb[0x9A] = { 1, "RES 3, D", &res3d_9A };
		cb[0x9B] = { 1, "RES 3, E", &res3e_9B };
		cb[0x9C] = { 1, "RES 3, H", &res3h_9C };
		cb[0x9D] = { 1, "RES 3, L", &res3l_9D };
		cb[0x9E] = { 1, "RES 3, (HL)", &res3hl_9E };
		cb[0x9F] = { 1, "RES 3, A", &res3a_9F };
		cb[0xA0] = { 1, "RES 4, B", &res4b_A0 };
		cb[0xA1] = { 1, "RES 4, C", &res4c_A1 };
		cb[0xA2] = { 1, "RES 4, D", &res4d_A2 };
		cb[0xA3] = { 1, "RES 4, E", &res4e_A3 };
		cb[0xA4] = { 1, "RES 4, H", &res4h_A4 };
		cb[0xA5] = { 1, "RES 4, L", &res4l_A5 };
		cb[0xA6] = { 1, "RES 4, (HL)", &res4hl_A6 };
		cb[0xA7] = { 1, "RES 4, A", &res4a_A7 };
		cb[0xA8] = { 1, "RES 5, B", &res5b_A8 };
		cb[0xA9] = { 1, "RES 5, C", &res5c_A9 };
		cb[0xAA] = { 1, "RES 5, D", &res5d_AA };
		cb[0xAB] = { 1, "RES 5, E", &res5e_AB };
		cb[0xAC] = { 1, "RES 5, H", &res5h_AC };
		cb[0xAD] = { 1, "RES 5, L", &res5l_AD };
		cb[0xAE] = { 1, "RES 5, (HL)", &res5hl_AE };
		cb[0xAF] = { 1, "RES 5, A", &res5a_AF };
		cb[0xB0] = { 1, "RES 6, B", &res6b_B0 };
		cb[0xB1] = { 1, "RES 6, C", &res6c_B1 };
		cb[0xB2] = { 1, "RES 6, D", &res6d_B2 };
		cb[0xB3] = { 1, "RES 6, E", &res6e_B3 };
		cb[0xB4] = { 1, "RES 6, H", &res6h_B4 };
		cb[0xB5] = { 1, "RES 6, L", &res6l_B5 };
		cb[0xB6] = { 1, "RES 6, (HL)", &res6hl_B6 };
		cb[0xB7] = { 1, "RES 6, A", &res6a_B7 };
		cb[0xB8] = { 1, "RES 7, B", &res7b_B8 };
		cb[0xB9] = { 1, "RES 7, C", &res7c_B9 };
		cb[0xBA] = { 1, "RES 7, D", &res7d_BA };
		cb[0xBB] = { 1, "RES 7, E", &res7e_BB };
		cb[0xBC] = { 1, "RES 7, H", &res7h_BC };
		cb[0xBD] = { 1, "RES 7, L", &res7l_BD };
		cb[0xBE] = { 1, "RES 7, (HL)", &res7hl_BE };
		cb[0xBF] = { 1, "RES 7, A", &res7a_BF };
		cb[0xC0] = { 1, "SET 0, B", &set0b_C0 };
		cb[0xC1] = { 1, "SET 0, C", &set0c_C1 };
		cb[0xC2] = { 1, "SET 0, D", &set0d_C2 };
		cb[0xC3] = { 1, "SET 0, E", &set0e_C3 };
		cb[0xC4] = { 1, "SET 0, H", &set0h_C4 };
		cb[0xC5] = { 1, "SET 0, L", &set0l_C5 };
		cb[0xC6] = { 1, "SET 0, (HL)", &set0hl_C6 };
		cb[0xC7] = { 1, "SET 0, A", &set0a_C7 };
		cb[0xC8] = { 1, "SET 1, B", &set1b_C8 };
		cb[0xC9] = { 1, "SET 1, C", &set1c_C9 };
		cb[0xCA] = { 1, "SET 1, D", &set1d_CA };
		cb[0xCB] = { 1, "SET 1, E", &set1e_CB };
		cb[0xCC] = { 1, "SET 1, H", &set1h_CC };
		cb[0xCD] = { 1, "SET 1, L", &set1l_CD };
		cb[0xCE] = { 1, "SET 1, (HL)", &set1hl_CE };
		cb[0xCF] = { 1, "SET 1, A", &set1a_CF };
		cb[0xD0] = { 1, "SET 2, B", &set2b_D0 };
		cb[0xD1] = { 1, "SET 2, C", &set2c_D1 };
		cb[0xD2] = { 1, "SET 2, D", &set2d_D2 };
		cb[0xD3] = { 1, "SET 2, E", &set2e_D3 };
		cb[0xD4] = { 1, "SET 2, H", &set2h_D4 };
		cb[0xD5] = { 1, "SET 2, L", &set2l_D5 };
		cb[0xD6] = { 1, "SET 2, (HL)", &set2hl_D6 };
		cb[0xD7] = { 1, "SET 2, A", &set2a_D7 };
		cb[0xD8] = { 1, "SET 3, B", &set3b_D8 };
		cb[0xD9] = { 1, "SET 3, C", &set3c_D9 };
		cb[0xDA] = { 1, "SET 3, D", &set3d_DA };
		cb[0xDB] = { 1, "SET 3, E", &set3e_DB };
		cb[0xDC] = { 1, "SET 3, H", &set3h_DC };
		cb[0xDD] = { 1, "SET 3, L", &set3l_DD };
		cb[0xDE] = { 1, "SET 3, (HL)", &set3hl_DE };
		cb[0xDF] = { 1, "SET 3, A", &set3a_DF };
		cb[0xE0] = { 1, "SET 4, B", &set4b_E0 };
		cb[0xE1] = { 1, "SET 4, C", &set4c_E1 };
		cb[0xE2] = { 1, "SET 4, D", &set4d_E2 };
		cb[0xE3] = { 1, "SET 4, E", &set4e_E3 };
		cb[0xE4] = { 1, "SET 4, H", &set4h_E4 };
		cb[0xE5] = { 1, "SET 4, L", &set4l_E5 };
		cb[0xE6] = { 1, "SET 4, (HL)", &set4hl_E6 };
		cb[0xE7] = { 1, "SET 4, A", &set4a_E7 };
		cb[0xE8] = { 1, "SET 5, B", &set5b_E8 };
		cb[0xE9] = { 1, "SET 5, C", &set5c_E9 };
		cb[0xEA] = { 1, "SET 5, D", &set5d_EA };
		cb[0xEB] = { 1, "SET 5, E", &set5e_EB };
		cb[0xEC] = { 1, "SET 5, H", &set5h_EC };
		cb[0xED] = { 1, "SET 5, L", &set5l_ED };
		cb[0xEE] = { 1, "SET 5, (HL)", &set5hl_EE };
		cb[0xEF] = { 1, "SET 5, A", &set5a_EF };
		cb[0xF0] = { 1, "SET 6, B", &set6b_F0 };
		cb[0xF1] = { 1, "SET 6, C", &set6c_F1 };
		cb[0xF2] = { 1, "SET 6, D", &set6d_F2 };
		cb[0xF3] = { 1, "SET 6, E", &set6e_F3 };
		cb[0xF4] = { 1, "SET 6, H", &set6h_F4 };
		cb[0xF5] = { 1, "SET 6, L", &set6l_F5 };
		cb[0xF6] = { 1, "SET 6, (HL)", &set6hl_F6 };
		cb[0xF7] = { 1, "SET 6, A", &set6a_F7 };
		cb[0xF8] = { 1, "SET 7, B", &set7b_F8 };
		cb[0xF9] = { 1, "SET 7, C", &set7c_F9 };
		cb[0xFA] = { 1, "SET 7, D", &set7d_FA };
		cb[0xFB] = { 1, "SET 7, E", &set7e_FB };
		cb[0xFC] = { 1, "SET 7, H", &set7h_FC };
		cb[0xFD] = { 1, "SET 7, L", &set7l_FD };
		cb[0xFE] = { 1, "SET 7, (HL)", &set7hl_FE };
		cb[0xFF] = { 1, "SET 7, A", &set7a_FF };


	}

	instruction base[0x100];
	instruction cb[0x100];
};
